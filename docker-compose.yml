version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: lifepattern-postgres
    environment:
      POSTGRES_DB: lifepattern
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/migrations:/docker-entrypoint-initdb.d
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d lifepattern"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # AI Service
  ai-service:
    build: ./ai-service
    container_name: lifepattern-ai-service
    ports:
      - "8000:8000"
    environment:
      - PORT=8000
      - PYTHONPATH=/app
    volumes:
      - ai_models:/app/models
      - ai_logs:/app/logs
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Backend Service
  backend:
    build: ./backend
    container_name: lifepattern-backend
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - HOST=0.0.0.0
      - DATABASE_URL=postgres://postgres:password@postgres:5432/lifepattern?sslmode=disable
      - AI_SERVICE_URL=http://ai-service:8000
    volumes:
      - backend_logs:/app/logs
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      ai-service:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  postgres_data:
    driver: local
  ai_models:
    driver: local
  ai_logs:
    driver: local
  backend_logs:
    driver: local

networks:
  default:
    name: lifepattern-network 